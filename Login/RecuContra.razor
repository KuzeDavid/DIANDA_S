@page "/RecuperarContra"
@inject NavigationManager NavigationManager
@inject EmailService EmailService
@using System;
@using System.Text;
@using Extentions
@inject IJSRuntime jsruntime

<div class="d-flex justify-content-center align-self-center mt-5 mb-3">
    <div>
        <img src="images/robot.png" style="width: 300px; height: 300px;" />
    </div>
</div>

<div class="d-flex justify-content-center align-self-center">
    <div class="contenedor">
        <RadzenCard>
            <RadzenText class="mb-3" TextStyle="TextStyle.H4" Style="color: #000000;">Te enviaremos un correo para restablecer tu contraseña ;)</RadzenText>
            <div class="mb-3">
                <RadzenTextBox Style="width:400px;" @bind-Value="@toEmail" Placeholder="Introduce tu correo electrónico" />
                <button type="button" class="btn btn-secondary" @onclick="EnviarCorreo">Enviar</button>
            </div>
        </RadzenCard>
    </div>
</div>

@code {
    private string toEmail;
    private string subject= "Recuperacion de contraseña";
    private string body;

    private async Task EnviarCorreo()
    {
        try
        {
            string nuevaContrasena = GenerarContrasena();
            body = $"Su nueva contraseña es: {nuevaContrasena}";
            // Enviar correo electrónico utilizando el servicio de EmailService
            await EmailService.SendEmailAsync(toEmail, subject, body);

            NavigationManager.NavigateTo("/Login");
            await jsruntime.ToastrSuccess("Correo enviado con éxito");
            Console.WriteLine("Correo electrónico enviado con éxito");
        }
        catch (Exception ex)
        {
            // Manejar errores de envío de correo electrónico
            Console.WriteLine($"Error al enviar correo electrónico: {ex.Message}");
        }
    }
    //RECORDEMOS ASIGNAR LA CONTRASEÑA EN LA BD
    private string GenerarContrasena()
    {
        // Caracteres válidos para la contraseña
        string caracteresValidos = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";

        // Generar un objeto aleatorio
        Random random = new Random();

        // Generar la contraseña aleatoria
        StringBuilder contrasena = new StringBuilder();
        for (int i = 0; i < 6; i++)
        {
            contrasena.Append(caracteresValidos[random.Next(caracteresValidos.Length)]);
        }

        return contrasena.ToString();
    }

}
