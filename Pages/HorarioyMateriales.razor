@page "/HorarioyMateriales"

<head>
    <link rel="stylesheet" href="css/DiandaStyle.css" />
</head>

<style>

    /* file input modal*/
    .custum-file-upload {
        height: 200px;
        width: 300px;
        display: flex;
        flex-direction: column;
        align-items: space-between;
        gap: 20px;
        cursor: pointer;
        align-items: center;
        justify-content: center;
        border: 2px dashed #e8e8e8;
        background-color: #212121;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0px 48px 35px -48px #e8e8e8;
    }

        .custum-file-upload .icon {
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .custum-file-upload .icon svg {
                height: 80px;
                fill: #e8e8e8;
            }

        .custum-file-upload .text {
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .custum-file-upload .text span {
                font-weight: 400;
                color: #e8e8e8;
            }

        .custum-file-upload input {
            display: none;
        }

    /*input*/

    .input-container {
        position: relative;
        margin: 50px auto;
        width: 400px;
    }

        .input-container input[type="text"] {
            font-size: 20px;
            width: 100%;
            border: none;
            border-bottom: 2px solid #ccc;
            padding: 5px 0;
            background-color: transparent;
            outline: none;
        }

        .input-container .label {
            position: absolute;
            top: 0;
            left: 0;
            color: #ccc;
            transition: all 0.3s ease;
            pointer-events: none;
        }

        .input-container input[type="text"]:focus ~ .label,
        .input-container input[type="text"]:valid ~ .label {
            top: -20px;
            font-size: 16px;
            color: #333;
        }

        .input-container .underline {
            position: absolute;
            bottom: 0;
            left: 0;
            height: 2px;
            width: 100%;
            background-color: #333;
            transform: scaleX(0);
            transition: all 0.3s ease;
        }

        .input-container input[type="text"]:focus ~ .underline,
        .input-container input[type="text"]:valid ~ .underline {
            transform: scaleX(1);
        }

    /*Modal sin lineas*/
    .modal-header,
    .modal-body,
    .modal-footer {
        border: none; /* Elimina el borde */
        margin: 10px;
        padding: 0;
    }

    /*Animar*/
    .fade-in {
        opacity: 1;
        transition: opacity 0.5s ease-in-out;
    }

    .fade-out {
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
    }

</style>


<div class="contenedor">
    <RadzenText TextStyle="TextStyle.H6" Style="color: #ffffff;">TU ESTILO DE ENSEÑANZA ES:</RadzenText>
    <RadzenText TextStyle="TextStyle.H3" Style="color: #ffb17a;"><strong>VISUAL</strong></RadzenText>
</div>

<div class="d-flex flex-column justify-content-center align-items-center" style="height: 70vh;">

    <div class="text-center mb-4">
        <RadzenImage src="images/profesor.png" Style="width: 300px; height: 300px;" />
        <RadzenText TextStyle="TextStyle.H4" Style="color: #ffffff;">TE RECOMENDAMOS...</RadzenText>
    </div>

    <div class="d-grid gap-2 col-6 mx-auto mt-1">
        <button Style="background-color: #ffb17a; color: #ffffff; font-size: 18px; font-family: 'Roboto'" type="wbutton" @onclick="ShowModalHorario">Registrar Horario</button>
    </div>

    <div class="d-grid gap-2 col-6 mx-auto mt-4">
        <button Style="background-color: #ffb17a; color: #ffffff; font-size: 18px; font-family: 'Roboto'" type="wbutton" @onclick="ShowModalMateriales">Registrar Materiales</button>
    </div>

</div>

<!-- HORARIOS -->
<!-- Modal de horario-->
<div class="modal @(animationClass)" tabindex="-1" @onclick="PreventModalClose" style="display: @modalDisplay; margin-left: 7%; z-index: 9999;">
    <div class="modal-dialog modal-dialog-centered ">
        <div class="modal-dialog ">
            <div class="modal-content ">
                <div class="modal-body ">
                    <div class="mb-3 custom-file">
                        @if (NomModal == "horario")
                        {
                            <label for="file" class="custum-file-upload">
                                <div class="icon">
                                    <svg viewBox="0 0 24 24" fill="" xmlns="http://www.w3.org/2000/svg">
                                        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                        <g id="SVGRepo_tracerCarrier"
                                           stroke-linecap="round" stroke-linejoin="round"></g>
                                        <g id="SVGRepo_iconCarrier">
                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M10 1C9.73478 1
                  9.48043 1.10536 9.29289 1.29289L3.29289 7.29289C3.10536 7.48043 3 7.73478 3 8V20C3 21.6569 4.34315 23 6 23H7C7.55228 23 8 22.5523 8 22C8 21.4477
                  7.55228 21 7 21H6C5.44772 21 5 20.5523 5 20V9H10C10.5523 9 11 8.55228 11 8V3H18C18.5523 3 19 3.44772 19 4V9C19 9.55228 19.4477 10 20 10C20.5523
                  10 21 9.55228 21 9V4C21 2.34315 19.6569 1 18 1H10ZM9 7H6.41421L9 4.41421V7ZM14 15.5C14 14.1193 15.1193 13 16.5 13C17.8807 13 19 14.1193 19
                  15.5V16V17H20C21.1046 17 22 17.8954 22 19C22 20.1046 21.1046 21 20 21H13C11.8954 21 11 20.1046 11 19C11 17.8954 11.8954 17 13 17H14V16V15.5ZM16.5
                  11C14.142 11 12.2076 12.8136 12.0156 15.122C10.2825 15.5606 9 17.1305 9 19C9 21.2091 10.7909 23 13 23H20C22.2091 23 24 21.2091 24 19C24 17.1305
                  22.7175 15.5606 20.9844 15.122C20.7924 12.8136 18.858 11 16.5 11Z" fill=""></path>
                                        </g>
                                    </svg>
                                </div>
                                <div class="text">
                                    <span>Sube tu @NomModal</span>
                                </div>
                                <input id="file" type="file">
                            </label>
                        }
                        else if (NomModal == "materiales")
                        {
                            <div class="input-container">
                                <input type="text" id="input" required="">
                                <label for="input" class="label">Enter Text</label>
                                <div class="underline"></div>
                            </div>
                        }
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="HideModal">Cerrar</button>
                    <button type="button" Style="background-color: #ffb17a; color: #ffffff;">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Capa de fondo oscuro -->
<div class="modal-backdrop @(animationClass)" style="display: @modalDisplay"></div>


@code {
    private string modalDisplay = "none";
    private string NomModal = "";
    private string animationClass = "";


    void OnChange(string value, string name)
    {

    }


    private async Task ShowModalHorario()
    {
        NomModal = "horario";
        modalDisplay = "block";
        await Task.Delay(50); // Pequeño retraso para permitir que el DOM se actualice
        animationClass = "fade-in"; // Aplicamos la clase de animación de fade-in
    }
    private async Task ShowModalMateriales()
    {
        NomModal = "materiales";
        modalDisplay = "block";
        await Task.Delay(50); // Pequeño retraso para permitir que el DOM se actualice
        animationClass = "fade-in"; // Aplicamos la clase de animación de fade-in
    }
    private async Task HideModal()
    {
        animationClass = "fade-out"; // Aplicamos la clase de animación de fade-out
        await Task.Delay(500); // Esperamos el tiempo de duración de la animación
        modalDisplay = "none"; // Ocultamos el modal después de la animación
    }

    protected override void OnInitialized()
    {
        animationClass = "fade-out"; //Prevenir la ausencia del primer fade-in en modales
    }

    private void PreventModalClose()
    {
        // No hacemos nada, solo evitamos que el modal se cierre al hacer clic dentro de él
    }

}